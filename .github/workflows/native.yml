name: Build Native Binaries

on:
  release:
    types: [created]

jobs:

  linux:
    name: Linux Binary
    runs-on: ubunti-latest
    env:
      MVN: mvn --show-version --batch-mode
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v2
      - name: Setup GraalVM environment
        id: setup-graalvm
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: 22.0.0.2
          java: java11
      - name: Read Version
        id: read-version
        run: |
          VERSION=$( mvn help:evaluate -Dexpression=project.version --non-recursive --quiet -DforceStdout )
          echo "::set-output name=version::$VERSION"
      - name: Install Native Image
        id: install-native-image
        run: gu install native-image
      - name: Build
        id: build
        run: $MVN package --projects standalone --also-make -P native,prod,theme-hal
      - name: Upload
        id: upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./standalone/target/hal-standalone-${{ steps.read-version.outputs.version }}-runner
          asset_name: quarkus-ls-${{ github.event.release.tag_name }}-win64.exe
          asset_content_type: application/octet-stream

  macos:
    name: macOS Binary
    runs-on: macos-latest
    env:
      MVN: mvn --show-version --batch-mode
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v2
      - name: Setup GraalVM environment
        id: setup-graalvm
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: 22.0.0.2
          java: java11
      - name: Read Version
        id: read-version
        run: |
          VERSION=$( mvn help:evaluate -Dexpression=project.version --non-recursive --quiet -DforceStdout )
          echo "::set-output name=version::$VERSION"
      - name: Quarantine
        id: quarantine
        run: xattr -r -d com.apple.quarantine ${GRAALVM_HOME}/../..
      - name: Install Native Image
        id: install-native-image
        run: gu install native-image
      - name: Build
        id: build
        run: $MVN package --projects standalone --also-make -P native,prod,theme-hal
      - name: Upload
        id: upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./standalone/target/hal-standalone-${{ steps.read-version.outputs.version }}-runner
          asset_name: quarkus-ls-${{ github.event.release.tag_name }}-win64.exe
          asset_content_type: application/octet-stream

  windows:
    runs-on: window-2019
    name: Windows Binary
    env:
      MVN: mvn --show-version --batch-mode
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v2
      - name: Setup GraalVM environment
        id: setup-graalvm
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: 22.0.0.2
          java: java11
      - name: Read Version
        id: read-version
        run: |
          VERSION=$( mvn help:evaluate -Dexpression=project.version --non-recursive --quiet -DforceStdout )
          echo "::set-output name=version::$VERSION"
      - name: Install Native Image
        id: install-native-image
        run: gu.cmd install native-image
      - name: Configure Pagefile
        id: configure-pagefile
        uses: al-cheb/configure-pagefile-action@v1.2
      - name: Build
        id: build
        run: cmd /c 'call "C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Auxiliary\Build\vcvars64.bat" && mvn package -Pnative'
      - name: Upload
        id: upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./standalone/target/hal-standalone-${{ steps.read-version.outputs.version }}-runner.exe
          asset_name: quarkus-ls-${{ github.event.release.tag_name }}-win64.exe
          asset_content_type: application/octet-stream
